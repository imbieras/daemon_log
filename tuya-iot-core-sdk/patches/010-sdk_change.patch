Index: tuya-iot-core-sdk-0.0.1/CMakeLists.txt
===================================================================
--- tuya-iot-core-sdk-0.0.1.orig/CMakeLists.txt
+++ tuya-iot-core-sdk-0.0.1/CMakeLists.txt
@@ -26,7 +26,7 @@ endif()
 # Set global path variables.
 get_filename_component(__root_dir "${CMAKE_CURRENT_LIST_DIR}" ABSOLUTE)
 set(ROOT_DIR ${__root_dir} CACHE INTERNAL "C SDK source root.")
-set(EXAMPLES_DIR "${ROOT_DIR}/examples" CACHE INTERNAL "C SDK examples root.")
+# set(EXAMPLES_DIR "${ROOT_DIR}/examples" CACHE INTERNAL "C SDK examples root.")
 set(PLATFORM_DIR "${ROOT_DIR}/platform" CACHE INTERNAL "C SDK platform root.")
 set(LIBRARIES_DIR "${ROOT_DIR}/libraries" CACHE INTERNAL "C SDK libraries root.")
 set(LINKSDK_DIRS "${ROOT_DIR}")
@@ -70,7 +70,7 @@ add_subdirectory( utils )
 add_subdirectory( src )
 
 # # Build the demos.
-add_subdirectory( examples )
+# add_subdirectory( examples )
 
 
 message(STATUS "------------------------------------------------------------" )
Index: tuya-iot-core-sdk-0.0.1/libraries/mbedtls/library/CMakeLists.txt
===================================================================
--- tuya-iot-core-sdk-0.0.1.orig/libraries/mbedtls/library/CMakeLists.txt
+++ tuya-iot-core-sdk-0.0.1/libraries/mbedtls/library/CMakeLists.txt
@@ -1,5 +1,5 @@
-option(USE_STATIC_MBEDTLS_LIBRARY "Build mbed TLS static library." ON)
-option(USE_SHARED_MBEDTLS_LIBRARY "Build mbed TLS shared library." OFF)
+option(USE_STATIC_MBEDTLS_LIBRARY "Build mbed TLS static library." OFF)
+option(USE_SHARED_MBEDTLS_LIBRARY "Build mbed TLS shared library." ON)
 option(LINK_WITH_PTHREAD "Explicitly link mbed TLS library to pthread." OFF)
 
 set(src_crypto
Index: tuya-iot-core-sdk-0.0.1/middleware/CMakeLists.txt
===================================================================
--- tuya-iot-core-sdk-0.0.1.orig/middleware/CMakeLists.txt
+++ tuya-iot-core-sdk-0.0.1/middleware/CMakeLists.txt
@@ -2,7 +2,7 @@ include( ${LIBRARIES_DIR}/coreHTTP/httpF
 include( ${LIBRARIES_DIR}/coreMQTT/mqttFilePaths.cmake )
 
 # Create target for POSIX implementation of reconnect logic.
-add_library( middleware_implementation STATIC
+add_library( middleware_implementation SHARED
                 ${MQTT_SOURCES}
                 ${MQTT_SERIALIZER_SOURCES}
                 ${HTTP_SOURCES}
Index: tuya-iot-core-sdk-0.0.1/platform/posix/CMakeLists.txt
===================================================================
--- tuya-iot-core-sdk-0.0.1.orig/platform/posix/CMakeLists.txt
+++ tuya-iot-core-sdk-0.0.1/platform/posix/CMakeLists.txt
@@ -1,7 +1,7 @@
 include( ${LIBRARIES_DIR}/mbedtlsFilePaths.cmake )
 
 # Create target for POSIX implementation of reconnect logic.
-add_library( platform_port STATIC
+add_library( platform_port SHARED
                "mbedtls_sockets_wrapper.c"
                "network_wrapper.c"
                "system_wrapper.c"
Index: tuya-iot-core-sdk-0.0.1/src/CMakeLists.txt
===================================================================
--- tuya-iot-core-sdk-0.0.1.orig/src/CMakeLists.txt
+++ tuya-iot-core-sdk-0.0.1/src/CMakeLists.txt
@@ -3,7 +3,7 @@ include( ${LIBRARIES_DIR}/coreJSON/jsonF
 include( ${LINKSDK_DIRS}/tuyaFilePaths.cmake )
 
 # Add a library with the above sources
-add_library( link_core STATIC
+add_library( link_core SHARED
     ${LINK_SDK_SOURCES}
     ${JSON_SOURCES}
 )
@@ -31,4 +31,4 @@ target_link_libraries( link_core
 # file(COPY ${JSON_SOURCES} DESTINATION ${PROJECT_SOURCE_DIR}/output/tuya_linksdk_c/src)
 
 # file(COPY ${OUTPUT_INCLUDE} DESTINATION ${PROJECT_SOURCE_DIR}/output/tuya_linksdk_c/include)
-# file(COPY ${OUTPUT_INTERNAL_INC} DESTINATION ${PROJECT_SOURCE_DIR}/output/tuya_linksdk_c/src/internal_inc)
\ No newline at end of file
+# file(COPY ${OUTPUT_INTERNAL_INC} DESTINATION ${PROJECT_SOURCE_DIR}/output/tuya_linksdk_c/src/internal_inc)
Index: tuya-iot-core-sdk-0.0.1/utils/CMakeLists.txt
===================================================================
--- tuya-iot-core-sdk-0.0.1.orig/utils/CMakeLists.txt
+++ tuya-iot-core-sdk-0.0.1/utils/CMakeLists.txt
@@ -2,7 +2,7 @@
 FILE(GLOB UTILS_SOURCES *.c)
 
 # Add a library with the above sources
-add_library( utils_modules STATIC
+add_library( utils_modules SHARED
     ${UTILS_SOURCES}
 )
 
@@ -10,4 +10,4 @@ target_include_directories( utils_module
     PUBLIC 
     ${CMAKE_CURRENT_LIST_DIR}
     ${INTERFACE_DIRS}
-)
\ No newline at end of file
+)
